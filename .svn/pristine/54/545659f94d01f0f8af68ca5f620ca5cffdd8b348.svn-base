package qpses.business;

import org.apache.log4j.Logger;
import java.sql.*;
import java.util.Vector;
import qpses.util.*;

public class AvgCeilingRateDBUser extends DataBean
{
    // Get class name
    private static String MyClassName = AvgCeilingRateDBUser.class.getName();
    
    // Set up Log4j
    private static Logger logger = Logger.getLogger(MyClassName);
    
    // Function ID
    private static String FunctionID = "ACRUSERENQ";
    
    // Stored procedure or query
    private static final String SELECT_AVG_CEILING_RATE     = "{call sp_select_avg_ceiling_rate_user(?, ?, ?, ?, ?, ?)}";
    private static final String SELECT_AVG_CEILING_RATE_EFF = "{call sp_select_avg_ceiling_rate_eff_user()}";
    
    /**
     * Creates a new instance of AvgCeilingRateDBUser
     */
    public AvgCeilingRateDBUser() throws SysException
    { super("USER"); }
    
    public AvgCeilingRateInfo getAvgCeilingRate(String aDate, String sc, String userId, String dpDeptId, String soaDeptId) throws SysException
    {
        String myName = "[" + MyClassName + "." + "getAvgCeilingRate" + "]";
        logger.debug(myName + " " + "started");

        Connection cnn = null;

        AvgCeilingRateInfo avgCRInfo = null;

        try
        {
            cnn = this.getConnection();
            cnn.setAutoCommit(false);

            CallableStatement aCStmt = this.getCStmt(SELECT_AVG_CEILING_RATE);

            aCStmt.setInt("p_sc", Integer.parseInt(sc));
            aCStmt.setDate("p_date", SysManager.getSQLDate(aDate));
            aCStmt.setString("p_user_id", userId);
            aCStmt.setString("p_dp_department_id", dpDeptId);
            aCStmt.setString("p_soa_department_id", soaDeptId);
            aCStmt.setString("p_function_id", this.FunctionID);

            aCStmt.executeUpdate();
            
            ResultSet rs = aCStmt.getResultSet();
            
            if (rs.next())
            {
                avgCRInfo = new AvgCeilingRateInfo();
                avgCRInfo.setPDFFile(rs.getBlob("pdf_file"));
                avgCRInfo.setPDFFileName(rs.getString("file_name"));
                avgCRInfo.setPDFFileSize(rs.getLong("file_size"));
            }
            
            cnn.commit();
        }
        catch (Exception ex)
        {
            try
            { if (cnn != null && !cnn.getAutoCommit()) cnn.rollback(); }
            catch (Exception ex2)
            { throw new SysException(myName, ex2.getMessage()); }
            
            throw new SysException(myName, ex.getMessage());
        }
        finally
        { super.close(); }
        
        logger.debug(myName + " " + "ended");
        
        return avgCRInfo;
    }

    
    public Vector getAvgCeilingRateEff() throws SysException
    {
        String myName = "[" + MyClassName + "." + "getAvgCeilingRateEff" + "]";
        logger.debug(myName + " " + "started");
        
        Vector avgCeilingRates       = new Vector();
        AvgCeilingRateInfo avgCRInfo = null;
        
        try
        {            
            CallableStatement aCStmt = this.getCStmt(SELECT_AVG_CEILING_RATE_EFF);
            
            aCStmt.executeUpdate();
            
            ResultSet rs = aCStmt.getResultSet();
            
            while (rs.next())
            {
                avgCRInfo = new AvgCeilingRateInfo();
                
                avgCRInfo.setServiceCategory(rs.getInt("service_category"));                
                avgCRInfo.setEffectiveDate(rs.getDate("effective_date"));
                avgCRInfo.setPDFFile(rs.getBlob("pdf_file"));
                avgCRInfo.setPDFFileName(rs.getString("file_name"));
                avgCRInfo.setPDFFileSize(rs.getLong("file_size"));
                
                avgCeilingRates.add(avgCRInfo);
            }
        }
        catch (Exception ex)
        { throw new SysException(myName, ex.getMessage()); }
        finally
        { super.close(); }
                
        logger.debug(myName + " " + "ended");
        
        return avgCeilingRates;
    }
}