/**********************************************************************************
 * Author            : Owen Mang, Master Concept HK Ltd.
 * Version           : 1.1
 * Create Date       : Aug 12, 2013
 * Last Updated Date : Aug 22, 2013
 *********************************************************************************/
package qpses.util;

import qpses.business.ExcelCell;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.StringWriter;
import java.util.ArrayList;

import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.apache.log4j.Logger;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.hssf.converter.ExcelToHtmlConverter;
import org.apache.poi.poifs.filesystem.POIFSFileSystem;

import com.lowagie.text.Document;
import com.lowagie.text.pdf.PdfWriter;

public class MSExcelHelper {

	private static Logger logger = Logger.getLogger(MSExcelHelper.class);
	
	private ArrayList<ExcelCell> cellValues = null;
	private String inputFilePath = ""; 
	private String outputFilePath = "";
	private boolean isNewExcelCreated = false;
	private String pdfFilePath = "";
	private String imgFilePath = "";

	/**
	 * @return created Excel document path
	 * @throws SysException
	 */
	public String getOutputFilePath() throws SysException {
		
		if (!isNewExcelCreated)
			throw new SysException(this.getClass().getName() 
					+ "getOutputFilePath() : Document Conversion is not yet process");
		
		return outputFilePath;
	}

	/*
	public String getPdfFilePath() throws SysException{
	
		if (pdfFilePath == null)
			generatePDF();

		return pdfFilePath;
	}
	*/

	/*
	public String getImgFilePath() throws SysException{
		
		if (imgFilePath == null)
			generateImg();
		

		return imgFilePath;
	}	
	*/

	/*
	private void generatePDF() throws SysException {
		
		if (!isNewExcelCreated)
			throw new SysException(this.getClass().getName() 
					+ "generatePDF() : Excel Conversion is not yet process. PDF cannot be generated");
		
		//Generate PDF coding
		Document pdfDocument = new Document();
		try {
			pdfFilePath = outputFilePath.replace(".xls", ".pdf");
			FileOutputStream fileOutputStream = new FileOutputStream(pdfFilePath);
			PdfWriter writer = null;
			writer = PdfWriter.getInstance(pdfDocument, fileOutputStream);
			writer.open();
			pdfDocument.open();
			
			File file = new File(outputFilePath);
			pdfDocument.add(new com.lowagie.text.Paragraph(org.apache.commons.io.FileUtils.readFileToString(file, "UTF-8")));
			
			pdfDocument.close();
			writer.close();
		} catch (Exception ex) {
			logger.error(ex);
			pdfFilePath = null;
			throw new SysException(this.getClass().getName() 
					+ "generatePDF() : " + ex.getMessage());
		}
		
	}
	*/

	/*
	private void generateImg() throws SysException {
		if (!isNewExcelCreated)
			throw new SysException(this.getClass().getName() 
					+ "generateImg() : Excel Conversion is not yet process. Img cannot be generated");
		
		//Generate PDF first.
		if (pdfFilePath == null)
			generatePDF();
		
		//Generate Img Coding
		
		
	}
	*/
	/**
	 * @return document in HTML code format
	 * @throws SysException
	 */	
    public String getHtmlText() throws SysException
    {
    	if (!isNewExcelCreated)
    		throw new SysException(this.getClass().getName() 
					+ "getHtmlText() : Excel Conversion is not yet process. HTML Code cannot be generated");
    	
    	String result = null;
    	File inputFile = null;
    	FileInputStream fileIStream = null;
    	BufferedInputStream bufIStream = null;
    	POIFSFileSystem fileSystem = null;
    	HSSFWorkbook hssfDocument = null;    
    	org.w3c.dom.Document newDocument = null;
    	ExcelToHtmlConverter excelToHtmlConverter = null;
    	StringWriter stringWriter = null;
    	Transformer transformer = null;
    	
    	try {

	    	inputFile = new File(outputFilePath);
	    	fileIStream = new FileInputStream(inputFile);
	    	bufIStream = new BufferedInputStream(fileIStream);
	    	fileSystem = new POIFSFileSystem(bufIStream);
	    	hssfDocument = new HSSFWorkbook(fileSystem);
	
	    	newDocument = DocumentBuilderFactory.newInstance()
	                .newDocumentBuilder().newDocument();
	        excelToHtmlConverter = new ExcelToHtmlConverter(
	                newDocument );
	
	        excelToHtmlConverter.processWorkbook( hssfDocument );
	
	        stringWriter = new StringWriter();
	
	        transformer = TransformerFactory.newInstance()
	                .newTransformer();
	        transformer.setOutputProperty( OutputKeys.INDENT, "yes" );
	        transformer.setOutputProperty( OutputKeys.ENCODING, "utf-8" );
	        transformer.setOutputProperty( OutputKeys.METHOD, "html" );
	        transformer.transform(
	                new DOMSource( excelToHtmlConverter.getDocument() ),
	                new StreamResult( stringWriter ) );
	
	        result = stringWriter.toString();
	        
    	} catch (Exception ex) {
    		String err = this.getClass().getName() 
					+ ".process() : " + ex.getMessage();
        	logger.error(err,ex);
			throw new SysException(this.getClass().getName() + ".getHtmlText() : " + ex.getMessage());
		} finally {
    		try {
	    		stringWriter.close();
	    		stringWriter = null;
    		} catch (Exception ex2) {
    			logger.error(ex2);
	    		throw new SysException(this.getClass().getName() 
						+ ".getHtmlText() : " + ex2.getMessage());
	    	}
	    	try {
	    		bufIStream.close();
	    		bufIStream = null;
	    	} catch (Exception ex3) {
	    		logger.error(ex3);
	    		throw new SysException(this.getClass().getName() 
	    				+ ".getHtmlText() : " + ex3.getMessage());
	    	}
	
	    	try {
	    		fileIStream.close();
	    		fileIStream = null;
	    	} catch (Exception ex4) {
	    		logger.error(ex4);
	    		throw new SysException(this.getClass().getName() 
	    				+ ".getHtmlText() : " + ex4.getMessage());	
	    	}
    	}
        return result;
    }

	public MSExcelHelper(String inputFileName, String outputFileName) {
		this.inputFilePath = inputFileName;
		this.outputFilePath = outputFileName;
	}

	/**
	 * set Excel Cell Value in String
	 * @throws SysException
	 */	
	public void setExcelValue(int sheetNo, int rowNo, int cellNo,
			String value)  throws SysException {	
		
		setExcelValue(sheetNo, rowNo, cellNo, value, false);
	}
		
	/**
	 * set Excel Cell Value in String or Integer
	 * @throws SysException
	 */	
	public void setExcelValue(int sheetNo, int rowNo, int cellNo,
			String value, boolean isIntegerValue)  throws SysException  {
		
		if (cellValues == null) 
			cellValues = new ArrayList<ExcelCell>();

		sheetNo--;
		rowNo--;
		cellNo--; // 1=0, 2=1..		
		
		ExcelCell ec = new ExcelCell();
		ec.setSheet(sheetNo);
		ec.setRow(rowNo);
		ec.setCell(cellNo);
		ec.setValue(value);
		ec.setInteger(isIntegerValue);
		cellValues.add(ec);
	}
	
	/**
	 * Private Method to handle Cell value
	 * @throws SysException
	 */		
	private void setHSSFCellValue(HSSFWorkbook wb, int sheetNo, int rowNo, int cellNo,
			String value, boolean isIntegerValue) throws SysException {

		HSSFSheet sheet = wb.getSheetAt(sheetNo);
		HSSFRow row = sheet.getRow(rowNo); 
		HSSFCell cell = row.getCell(cellNo);
		
		if (cell != null){
			if (isIntegerValue) {
				cell.setCellValue(Integer.parseInt(value.replaceAll(",","")));
			} else {
				cell.setCellValue(value);
			}
		}

	}
	
	/**
	 * Method to free memory
	 * @throws SysException
	 */
	public void close() throws SysException{
		
		//Clear Map
		if (cellValues != null) {
			cellValues.clear();
			cellValues = null;
		}
		
		File tempFile = null;
		//Delete output file
		try {
			tempFile = new File(outputFilePath);
			if (tempFile.exists() && tempFile.isFile()) {
				tempFile.delete();
			}
			
		} catch (Exception ex) {
			String err = this.getClass().getName() 
					+ ".process() : " + ex.getMessage();
        	logger.error(err,ex);
			throw new SysException(this.getClass().getName() + ".close() : " + ex.getMessage());
		}
		
		/*//Delete PDF file if exist
		try {
			tempFile = new File(pdfFilePath);
			if (tempFile.exists() && tempFile.isFile()) {
				tempFile.delete();
			}
			
		} catch (Exception ex) {
			logger.error(ex);
			throw new SysException(this.getClass().getName() + ".close() : " + ex.getMessage());
		}
		
		//Delete img file if exist
		try {
			tempFile = new File(imgFilePath);
			if (tempFile.exists() && tempFile.isFile()) {
				tempFile.delete();
			}
			
		} catch (Exception ex) {
			logger.error(ex);
			throw new SysException(this.getClass().getName() + ".close() : " + ex.getMessage());
		}
		*/
		
	}
	
	/**
	 * method to generate new Excel
	 * @throws SysException
	 */
	public boolean process() throws SysException {
	
		
	    FileInputStream fileIStream = null;
	    FileOutputStream fileOStream = null;
	    POIFSFileSystem fileSystem = null;
	    HSSFWorkbook wb = null;
		
        try {
        	
        	logger.debug("Start processing...");
        	fileIStream = new FileInputStream(inputFilePath);
    		fileSystem = new POIFSFileSystem(fileIStream);
    		wb = new HSSFWorkbook(fileSystem);
        	
        	ExcelCell ec = null;
        	if (cellValues!=null) {
	    		for (int i=0;i<cellValues.size();i++) {
	    			ec = (ExcelCell)cellValues.get(i);
	    			setHSSFCellValue(wb, ec.getSheet(), ec.getRow(), ec.getCell(), ec.getValue(),ec.isInteger());
	    		}
        	}
            
    		fileOStream = new FileOutputStream(outputFilePath);
    		wb.write(fileOStream);

        } catch (Exception ex) {
        	String err = this.getClass().getName() 
					+ ".process() : " + ex.getMessage();
        	logger.error(err,ex);
        	isNewExcelCreated = false;
        	throw new SysException(this.getClass().getName() + ".process() : " + ex.getMessage());
        } finally {
        	try {
	        	if (wb != null) {
	        		wb = null;
	        	}
        	} catch (Exception ex2) {
        		String err = this.getClass().getName() + ".process() : " + ex2.getMessage();
	    		logger.error(err,ex2);
	    		throw new SysException(err);
        	}
	        try {
	        	if (fileSystem != null) {
	        		fileSystem = null;
	        	}        	
        	} catch (Exception ex2) {
        		String err = this.getClass().getName() + ".process() : " + ex2.getMessage();
	    		logger.error(err,ex2);
	    		throw new SysException(err);
        	}
	        try {
	        	if  (fileOStream != null) {
	        		fileOStream.close();
	        		fileOStream = null; 
	        	}
        	} catch (Exception ex2) {
        		String err = this.getClass().getName() + ".process() : " + ex2.getMessage();
	    		logger.error(err,ex2);
	    		throw new SysException(err);
        	}
	        try {
	        	if (fileIStream != null) {
	        		fileIStream.close();
	        		fileIStream = null;
	        	}
        	} catch (Exception ex2) {
        		String err = this.getClass().getName() + ".process() : " + ex2.getMessage();
	    		logger.error(err,ex2);
	    		throw new SysException(err);
        	}
	        
        }
        logger.debug("Process end.");
        isNewExcelCreated = true;
        return isNewExcelCreated;
	}
		
	/*
	 * @param args
	 
	public static void main(String[] args) throws Exception {
		
		// TODO Auto-generated method stub
		String inputFilename = "C:/Tomcat7/webapps/QPSIS/WEB-INF/classes/qpses/util/"+Constant.STAT_REPORT_NAME;
		String outputFilename = "C:/Tomcat7/webapps/QPSIS/WEB-INF/classes/qpses/util/noproblemreport.xls";
		
		MSExcelHelper msxlsHelper = new MSExcelHelper(inputFilename, outputFilename);
		msxlsHelper.setExcelValue(1, 5, 3, "123", true);
		msxlsHelper.setExcelValue(1, 6, 3, "456", true);
		msxlsHelper.setExcelValue(1, 7, 3, "789", true);
		
		msxlsHelper.setExcelValue(1, 10, 3, "111213", true);
		msxlsHelper.setExcelValue(1, 10, 7, "141516", true);
		
		msxlsHelper.setExcelValue(1, 12, 3, "171819", true);
		msxlsHelper.setExcelValue(1, 13, 3, "202122", true);
		
		msxlsHelper.setExcelValue(1, 15, 3, "232425", true);
		msxlsHelper.setExcelValue(1, 16, 3, "262728", true);
		
		msxlsHelper.setExcelValue(1, 22, 3, "123", true);
		msxlsHelper.setExcelValue(1, 23, 3, "456", true);
		msxlsHelper.setExcelValue(1, 23, 7, "789", true);
		msxlsHelper.setExcelValue(1, 24, 3, "101112", true);
		msxlsHelper.setExcelValue(1, 25, 3, "131415", true);
		msxlsHelper.setExcelValue(1, 25, 7, "161718", true);
		
		msxlsHelper.setExcelValue(1, 28, 3, "123", true);
		msxlsHelper.setExcelValue(1, 29, 3, "456", true);
		msxlsHelper.setExcelValue(1, 29, 7, "789", true);
		msxlsHelper.setExcelValue(1, 30, 3, "101112", true);
		msxlsHelper.setExcelValue(1, 31, 3, "131415", true);
		msxlsHelper.setExcelValue(1, 31, 7, "161718", true);		

		msxlsHelper.setExcelValue(1, 34, 3, "123", true);
		msxlsHelper.setExcelValue(1, 35, 3, "456", true);
		msxlsHelper.setExcelValue(1, 35, 7, "789", true);
		msxlsHelper.setExcelValue(1, 36, 3, "101112", true);
		msxlsHelper.setExcelValue(1, 37, 3, "131415", true);
		msxlsHelper.setExcelValue(1, 37, 7, "161718", true);

		msxlsHelper.setExcelValue(1, 40, 3, "123", true);
		msxlsHelper.setExcelValue(1, 41, 3, "456", true);
		msxlsHelper.setExcelValue(1, 41, 7, "789", true);
		msxlsHelper.setExcelValue(1, 42, 3, "101112", true);
		msxlsHelper.setExcelValue(1, 43, 3, "131415", true);
		msxlsHelper.setExcelValue(1, 43, 7, "161718", true);
		
		msxlsHelper.setExcelValue(1, 46, 3, "123", true);
		msxlsHelper.setExcelValue(1, 47, 3, "456", true);
		msxlsHelper.setExcelValue(1, 47, 7, "789", true);
		msxlsHelper.setExcelValue(1, 48, 3, "101112", true);
		msxlsHelper.setExcelValue(1, 49, 3, "131415", true);
		msxlsHelper.setExcelValue(1, 49, 7, "161718", true);		
		
		msxlsHelper.setExcelValue(1, 52, 3, "123", true);
		msxlsHelper.setExcelValue(1, 53, 3, "456", true);
		msxlsHelper.setExcelValue(1, 53, 7, "789", true);
		msxlsHelper.setExcelValue(1, 54, 3, "101112", true);
		msxlsHelper.setExcelValue(1, 55, 3, "131415", true);
		msxlsHelper.setExcelValue(1, 55, 7, "161718", true);
		
		msxlsHelper.process();
		System.out.println(msxlsHelper.getHtmlText());
		//mswdHelper.generatePDF();
		
		//Clear Memory and delete output file
		msxlsHelper.close();
	}*/

}
