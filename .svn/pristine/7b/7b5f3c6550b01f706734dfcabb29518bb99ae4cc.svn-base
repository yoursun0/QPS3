package qpses.servlet;

import static org.easymock.EasyMock.*;

import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Blob;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.sql.rowset.serial.SerialBlob;
import javax.sql.rowset.serial.SerialException;

import org.easymock.EasyMock;
import org.junit.Test;

import qpses.business.AvgCeilingRateDBUser;
import qpses.business.AvgCeilingRateInfo;
import qpses.business.CPARDataBean;
import qpses.business.CPARInfo;
import qpses.business.CeilingRateCat1Info;
import qpses.business.CeilingRateCat2Info;
import qpses.business.CeilingRateCat3Info;
import qpses.business.CeilingRateCat4Info;
import qpses.business.ContractorDataBean;
import qpses.business.ContractorInfo;
import qpses.business.DeptDataBean;
import qpses.business.DeptInfo;
import qpses.business.LogDataBean;
import qpses.business.StaffRateValidationDBUser;
import qpses.business.WAChallengeInfo;
import qpses.business.WorkAssignmentInfo;
import qpses.security.SecurityContext;
import qpses.security.SecurityDataBean;
import qpses.security.SecurityServlet;
import qpses.security.UserStatus;
import qpses.util.Constant;
import qpses.util.SysException;
import qpses.util.SysManager;

public final class TestForAvgCeilingRate extends AvgCeilingRateSLUser {

	private ServletContext servCtx; 
	private DeptDataBean deptDB; 
	private ContractorDataBean conDB;
	private RequestDispatcher dispatcher;
	private AvgCeilingRateDBUser dbUser;
	protected UserStatus uStatus;
	
	@Override
	public ServletContext getServletContext(){
		try{
			InputStream is = new FileInputStream("pom.xml");
			dispatcher = createMock(RequestDispatcher.class);
			servCtx = createMock(ServletContext.class);
			expect(servCtx.getRequestDispatcher(isA(String.class))).andReturn(dispatcher);
			dispatcher.forward(isA(HttpServletRequest.class), isA(HttpServletResponse.class));
			expectLastCall().times(0,10);
			expect(servCtx.getResourceAsStream(isA(String.class))).andReturn(is).times(0,9);
		
			replay(servCtx);
			replay(dispatcher);
		}catch(ServletException e){
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return servCtx;
	}
	
    @Override
	public AvgCeilingRateDBUser getAvgCeilingRateDBUser() throws SysException, SerialException, SQLException{
    	List<AvgCeilingRateInfo> infoList = new ArrayList<AvgCeilingRateInfo>() ;
    	AvgCeilingRateInfo avgCRInfo = new AvgCeilingRateInfo();
		byte byteArray[] = new byte[] {37, 80, 68, 70, 45, 49, 46, 52, 10, 37, -61, -92, -61, -68, -61, -74, -61, -97, 10, 50, 32, 48, 32, 111, 98, 106, 10, 60, 60, 47, 76, 101, 110, 103, 116, 104, 32, 51, 32, 48, 32, 82, 47, 70, 105, 108, 116, 101, 114, 47, 70, 108, 97, 116, 101, 68, 101, 99, 111, 100, 101, 62, 62, 10, 115, 116, 114, 101, 97, 109, 10, 120, -100, -51, 90, -51, -81, 36, 39, 14, -65, -9, 95, 81, -25, 72, -45, 41, -66, 11, -23, -87, -91, -41, 95, 43, -27, -106, 104, -92, 28, -94, -36, 118, 55, 57, -28, -83, 52, 115, -39, 127, 127, -63, 54, 96, 40, -24, 126, -68, 76, -108, -43, -116, -22, 65, 21, 54, -74, -15, -49, 24, -45, -21, 81, 44, -1, 61, 124, 89, -42, -27, -45, 122, 84, -53, -90, -59, -47, 47, -58, -101, -48, -2, -6, -81, -27, -25, -17, -106, -1, 28, 126, 92, -66, 44, 70, -121, -1, 46, 124, 114, 74, -123, -89, 16, -127, 44, 125, -113, -60, -15, -33, -41, -33, 14, -25, -49, 7, 101, -59, 49, 12, 54, -21, 81, 46, -97, -1, -71, 124, 127, 23, -117, -113, -51, 127, -1, -14, -78, -118, -45, 39, -5, -78, -54, -45, -89, -19, 101, 85, -16, -44, 39, 33, -45, 123, 115, 50, 47, -85, -123, 102, 120, 29, -57, -87, -105, -43, 65, 127, -125, -89, 63, 125, -46, 105, -60, 107, 28, 124, 46, -125, -111, -59, -27, -92, 55, -58, 35, -80, -66, -98, 126, -3, -4, -61, -31, -10, -7, -16, 99, -46, 67, -103, -29, 70, 106, -88, 117, -84, -122, -33, -94, 33, -30, 3, -76, -112, -117, 59, -70, -84, -123, 7, 45, 100, -44, 66, -120, 56, 85, 108, 27, 120, 111, -87, -83, 65, 118, 97, 64, 120, 79, 111, 44, -66, -15, 69, -88, -98, -15, -108, 75, -77, -2, 31, -39, 14, -59, -4, -23, 31, -121, 44, -81, 81, 81, 86, 43, -105, -73, -125, 115, 38, -102, 51, -76, -1, 88, 82, 91, 4, 23, -6, 99, -95, 65, -40, -7, -3, 112, -2, -18, 96, 116, 48, -70, 10, -2, -79, 17, -95, -92, 30, -110, 66, 47, 18, -46, -80, -102, 76, -7, -93, 45, 100, -48, -53, 100, 106, 3, 38, 52, 16, 59, -116, 84, 110, 65, -122, 76, 10, -67, 76, 42, 29, 48, -94, -127, -40, 97, -92, -62, -123, 103, 38, -123, 94, 38, 21, 54, 40, -104, 72, -87, -125, -92, -96, -7, 26, -115, -111, 13, 4, -67, 108, -94, 53, 50, 72, 38, -94, 14, 35, 5, -53, 86, 31, 113, -110, -86, 99, 51, -111, -108, -126, 76, 29, -23, -88, 71, 19, 74, 41, -93, -84, 117, 15, 70, 38, 98, 103, -125, -67, -94, -71, -33, 82, 59, 13, 118, -18, 104, -38, 94, 89, 22, -91, 36, 45, -39, 91, 106, -45, -48, -40, -13, 109, -113, 17, 110, -47, -52, 68, -120, -19, 52, 116, -117, 107, -45, -12, 10, -95, -42, -119, -45, 91, 106, -45, 80, -83, 85, -64, 104, -45, 99, -124, 62, 113, 122, 75, -19, 52, -44, -5, -70, -51, -36, -50, 36, 46, 111, -87, 77, 3, 77, 88, 0, -35, -10, 10, -95, 93, 61, 57, -16, 91, 106, -45, -48, -40, -37, -38, 30, 35, -76, -119, -45, 91, 106, -89, -95, -42, 48, -5, 82, -81, 16, 58, -31, -13, 26, 82, 59, -7, -101, 92, -39, 26, 82, -113, 17, -94, 39, 103, 36, -53, -20, 99, -75, -93, 114, -108, 3, 97, 29, -68, -92, -41, 97, 21, -115, 20, 37, -14, -25, -104, -87, -41, -37, 122, -121, -56, -72, -123, 56, 40, -42, -40, 20, 66, -56, -109, 12, 81, 9, 62, -120, 16, -44, -60, -117, -48, -62, -100, 108, 122, -91, 69, 8, 71, -122, 104, -124, 112, -91, -125, -17, 43, -98, 91, 124, 21, 70, 105, -31, -15, -59, 107, -13, 34, -124, -51, -16, -10, 76, -68, 47, -16, -68, -58, 87, 55, 104, -34, -29, 16, 24, 119, 57, 41, -3, 34, 87, -112, 4, 71, 104, -8, 35, 5, 12, -124, -71, 73, -36, 27, 123, 3, 35, -103, 70, -56, 76, -128, -92, 56, -89, -57, 49, 65, -92, -31, 6, 16, 76, 29, 118, 79, -79, -18, 44, 8, 66, 117, 12, -122, 18, 120, 62, -91, 101, 83, -62, -124, 81, -75, -92, -120, 103, 98, 113, -15, 113, 60, -86, -8, 46, -125, -93, 57, 45, -29, -93, -125, -51, -22, 89, 94, -31, 61, -80, 33, 102, 76, 116, 102, -20, 96, 25, 124, -123, -20, 113, -48, -34, 17, -72, 116, -114, 86, 87, 13, 77, -87, 98, -128, -116, 64, -33, 90, 99, 74, -40, -68, -91, 98, 43, -113, -126, -29, 44, 26, 54, -11, 56, -117, -116, -69, 54, 25, 90, 112, 13, 80, 18, 114, -120, -76, -88, 59, 71, -118, 22, -86, 22, 11, -106, 15, -57, 95, -118, -90, 76, 45, 105, -117, 125, 61, 76, -89, -78, 29, -55, 47, 65, 10, -46, -64, -92, 89, -120, -18, -38, 26, 67, -80, -60, -62, 47, 26, -30, 108, -21, 89, -78, -104, -109, -81, -47, -27, -103, 107, 19, 77, -78, 14, 44, 23, -24, -80, -127, 108, -98, 89, -88, -64, 88, -66, -110, -23, -93, -107, -72, -91, 65, 1, 121, 102, -49, -53, 104, 101, 67, -88, 53, -117, 54, -86, 100, 73, 89, -105, 41, 107, -51, -84, 17, 67, -42, 30, 53, -63, 125, 5, 82, 115, -115, -122, 89, 30, -54, -81, 68, 120, -2, -3, 40, 47, 56, 74, -112, -20, 5, -41, 52, -22, -98, 39, 18, -14, 26, 62, 111, -51, -116, -30, -4, 97, -76, -112, 80, -17, -126, -53, 67, -61, -54, 124, -12, 96, 73, 59, 108, 6, -104, -124, -97, -95, -87, -55, 73, -30, 83, 18, 120, 64, 109, -14, -121, -100, -41, -29, 102, -123, -17, 37, -18, 91, 49, 105, 54, 8, -119, -76, -103, 81, -106, -17, 24, 39, 98, 34, 51, 121, -48, 74, -48, 16, 34, 2, 38, -102, -26, 49, 49, -11, 22, -106, 125, 118, 101, 58, 71, -57, 13, -116, -89, 34, 29, 40, 4, 24, -13, -108, -90, 9, 116, 15, 77, -77, -10, -50, 51, -59, 52, -88, -113, -58, 54, 56, 16, -77, 0, -105, -81, -42, 13, -44, 21, 30, 62, 71, 21, 73, 122, 85, 78, 66, -110, -79, 121, 45, -102, 15, -90, -61, -93, 9, 24, 60, 43, 73, 54, -107, 69, -110, 98, 82, -22, -21, -62, -8, 18, 41, 110, -120, -121, 60, 39, -102, 63, 77, -15, -56, 78, -54, -125, 113, -58, 118, -70, -47, 100, -78, -56, -117, -110, -36, -13, 68, -80, 42, 56, -27, 13, 17, -108, 23, 109, 96, -115, -95, 31, 112, 37, 91, 15, -20, 107, -22, 30, -85, -25, -30, -15, -2, -103, 27, 112, -7, 56, 88, -12, 78, -6, 29, 76, -38, 85, 3, -25, -107, 107, 49, -65, -87, 87, 56, 32, 90, -104, -54, 46, -7, 120, 93, 102, -17, 98, 114, -96, -90, 14, 123, 127, 76, -11, 101, 103, -117, -104, 8, -79, -114, -123, -49, 28, 98, 89, -120, -1, 51, 49, -104, -19, -15, 68, -64, -45, 88, 88, 12, 121, -21, 111, -22, -11, 98, 106, -111, 124, -75, -39, 7, 119, -71, -39, -83, 104, 43, -41, 65, 14, -57, -13, -128, -23, 45, -113, 82, -106, 51, 109, 22, 92, -37, -95, 18, 82, -37, -72, 84, 61, 45, 48, -111, 8, -100, -121, -55, 114, 36, -22, -109, -34, -97, -112, -102, 1, -95, 90, 31, 19, 106, 33, -29, -119, -84, 75, 42, -98, -112, 90, 23, -49, 100, 93, 82, -7, -104, -44, 72, 21, 79, 101, 93, 82, -11, -124, -44, 109, 35, 47, -111, -105, -57, -92, 54, -92, 40, 3, -127, 41, -69, 59, 63, 97, 16, -14, -51, -127, -40, -60, -64, 63, 102, -32, -62, -7, 126, 36, 60, 50, -80, 79, -76, 7, -120, -88, -75, -109, 106, -119, 54, 63, -63, 51, -34, -38, 57, 123, 126, -52, -81, -41, 120, 88, 14, 83, -21, 93, -88, -59, 92, 87, 18, 103, -103, -98, 102, -56, -53, 3, 70, 122, -68, -92, -102, -28, -91, 12, -128, -90, -53, 75, 79, -14, -46, -85, -125, 90, 91, -113, -105, -103, -27, 101, 1, 88, 93, 94, -77, -10, 50, 2, -112, -42, -27, -27, 102, 121, 57, -128, 94, -105, -41, 54, -55, -53, -54, 45, -42, -71, -70, -68, -4, 44, -81, 77, -115, -4, -117, -50, 88, -17, -25, -27, -108, 27, -23, 72, -11, -20, 89, -23, 16, 119, -62, -89, 60, -125, -31, 46, -95, 72, 75, 118, 126, -4, -53, 113, 40, -4, -2, 80, 48, -115, 29, -62, 97, -105, -41, 44, 118, 8, -121, 93, 94, -45, -40, 65, 28, 118, 121, -51, 98, -121, 112, -40, -27, 53, -115, 29, -60, 97, -105, -41, 44, 118, 8, -121, 93, 94, -45, -40, 65, 28, 118, 121, -51, 98, -57, 110, 98, -92, -29, 7, -79, 67, 104, 124, -64, 113, 58, 30, 2, 26, -61, -31, 79, -20, -48, -72, -81, -48, -79, -77, -8, 45, -41, 5, -38, -108, -11, 67, 24, 92, -73, 63, -115, 26, 66, 96, -121, -45, 44, 102, 8, 127, 29, 78, -45, -120, 65, -12, 117, 56, -51, -30, -123, -80, -41, -31, 52, -115, 22, 68, 94, -121, -45, 116, 36, 71, -36, 117, 56, 77, 35, 69, -38, -66, 118, 31, -60, 9, 33, 111, -56, 111, 118, 29, 9, 119, 35, 126, -45, -69, 5, -96, 78, 58, -99, 54, -43, -90, -28, -86, -88, 18, -127, 103, 70, 58, -91, 85, 23, 10, -99, 3, 86, 7, 118, 79, -54, 97, -46, -86, 4, -5, -18, 97, 63, -28, -16, 26, 78, 2, -71, -126, -62, 42, 45, -43, 1, 28, 74, 3, -84, -44, -46, -108, 57, -10, 85, 31, -50, -24, -42, -106, 119, 74, 37, -124, -58, -107, 73, -80, -98, 97, -101, -87, -85, 2, 64, 85, 43, 72, -105, -19, -71, 10, 55, 102, -14, 109, -27, -25, 116, 96, -53, 43, 29, -37, 117, 58, -128, -18, 68, -61, -89, 110, -11, -26, 117, -96, 59, -123, -28, 84, 47, 34, -103, 121, -35, -16, 54, -82, -120, -15, 18, 36, 23, -11, 90, -56, -85, -94, -50, -75, 20, 70, -5, 22, -69, 100, -51, 113, 44, -6, 74, -65, -16, 22, 79, -49, 29, -109, -111, 81, -71, 100, -96, 94, 0, -45, 67, -41, -43, -21, -2, -18, 102, 7, -127, -121, 28, 32, 52, -73, 28, 64, 82, 3, -34, -124, 119, 2, 104, 15, 60, 16, 106, 44, 16, -91, 42, -79, -78, 15, 39, 16, -34, 28, 119, -15, 2, 115, -42, -38, 121, 113, -103, -18, -59, 14, 21, -28, 90, 103, -6, 120, 49, 25, -104, 76, 45, -69, 2, -67, -107, 76, 107, 45, 52, -66, -127, 42, 32, 46, 104, 120, 37, 115, -12, 65, 34, 5, 68, -16, 21, 3, 89, 52, -88, -55, -60, 16, 85, 50, -79, 45, -91, 69, 44, 110, -78, -118, 53, 22, 79, 75, 9, 21, 117, -33, -107, 60, 31, -24, 60, -86, -89, 54, -90, -24, 24, -75, 53, -5, -83, 113, 117, 94, -117, 44, 53, -41, 42, 94, -115, -16, -52, 74, -26, -36, 13, -104, -20, 24, 121, 18, 14, 116, 42, 2, -17, 1, -8, 77, -4, -30, -52, -118, -9, -8, -15, 90, -124, 120, 125, 38, 32, 11, 76, 92, -78, 82, 86, 39, -2, 108, 117, 29, -117, -107, 109, -120, 27, 44, 33, 50, 93, -39, 44, -100, -16, -75, 92, -49, -72, -14, -126, -82, 29, -40, 125, -119, 114, -89, -83, 18, 120, 87, -92, 111, 55, -96, -20, 58, 15, -111, -66, -23, 116, 119, -54, -112, -2, 78, -77, 114, -7, 74, -39, 123, 103, -48, -54, -125, -60, -87, -39, -20, 6, -74, 100, 22, -127, 62, -85, -46, 87, -69, 0, 95, 89, 102, 99, -26, -41, -68, -76, -82, -54, -60, 60, 9, -32, 58, 61, 15, 45, 115, 59, -41, 115, -84, 14, 18, -125, 11, 27, -58, 98, 43, 119, -52, 126, -32, 104, 115, -122, -55, -99, -74, 0, -117, -35, 14, 86, -5, 60, 27, -15, 124, 7, 101, -6, 99, 120, -19, -85, -85, -74, -109, -118, -73, 5, -32, -2, -48, -7, -128, -20, 44, 36, -17, 35, -30, -73, -56, 55, 16, -123, -4, -37, -125, -5, -63, 54, -113, -30, -7, -62, 62, 53, -91, -127, -93, 59, -38, -127, 75, 116, 111, -97, 80, -32, 58, 13, 17, -4, -72, 41, 101, 0, 125, -4, -87, -63};
		Blob blob = new SerialBlob(byteArray);
		avgCRInfo.setPDFFileName("a.pdf");
		avgCRInfo.setPDFFile(blob);
		
    	infoList.add(avgCRInfo);
        
		// Pass a Mock DataBean
		dbUser = createMock(AvgCeilingRateDBUser.class);
		
		expect(dbUser.getAvgCeilingRateEff()).andReturn(infoList).anyTimes();
		expect(dbUser.getAvgCeilingRate(isA(String.class), isA(String.class), isA(String.class), isA(String.class), isA(String.class))).andReturn(avgCRInfo).anyTimes();
		replay(dbUser);
        return dbUser;
    }
    
    
    @Test
    public void test() throws SysException, SerialException, SQLException{
    	AvgCeilingRateDBUser db = getAvgCeilingRateDBUser();
    	db = null;
    }
    
}